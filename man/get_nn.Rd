% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nearest_point_nn.R
\name{get_nn}
\alias{get_nn}
\title{Function to select nearest community to a given sampling point (usually the
centroid of a square grid for CSAS or of a hexagonal grid for S3M) based on
a nearest neighbour algorithm using Euclidean calculations}
\usage{
get_nn(data, x1, y1, query, x2, y2, n, duplicate = FALSE)
}
\arguments{
\item{data}{An input data frame or matrix containing longitude and latitude
coordinates of village locations from which to find nearest neighbour}

\item{x1}{A character value specifying the variable name in \code{data}
containing the longitude coordinates}

\item{y1}{A character value specifying the variable name in \code{data}
containing the latitude coordinates}

\item{query}{an object of class `SpatialPoints` containing sampling point
locations. This is usually the output from applying `spsample()` function
from package `gstat` to create an even spatial sample across the entire
sampling area}

\item{x2}{A character value specifying the variable name in \code{query}
containing the longitude coordinates}

\item{y2}{A character value specifying the variable name in \code{query}
containing the latitude coordinates}

\item{n}{A numeric value speciyfing the maximum number of nearest neighbours
to search for}

\item{duplicate}{Logical. Specify if duplicate selected villages are to be
kept or discarded. Default is FALSE (discard).}
}
\value{
A subset data frame of \code{data} of selected villages/communities
    nearest to the sampling points with a new variable \code{d} indicating
    the distance of the village/community to the sampling point (in coordinate
    units). If \code{duplicate} is TRUE, the result has number of rows equal
    to \code{nrow(query)}
}
\description{
Function to select nearest community to a given sampling point (usually the
centroid of a square grid for CSAS or of a hexagonal grid for S3M) based on
a nearest neighbour algorithm using Euclidean calculations
}
\examples{
# Use get_nn() with test sampling points in Sennar to find 3 nearest communities
# from the sampling points
sennar <- subset(sudan01, STATE == "Sennar")
samp.points <- sp::spsample(sennar, type = "hexagonal", n = 10)
get_nn(data = sennar_villages, x1 = "x", y1 = "y",
       query = samp.points, x2 = "x", y2 = "y",
       n = 3)

}
\author{
Ernest Guevarra <ernest@guevarra.io>
}
