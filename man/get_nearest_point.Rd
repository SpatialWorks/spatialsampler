% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nearest_point.R
\name{get_nearest_point}
\alias{get_nearest_point}
\title{get_nearest_point}
\usage{
get_nearest_point(input, x1, y1, query, x2, y2, n = 1, duplicate = FALSE)
}
\arguments{
\item{input}{A matrix or data frame of input sampling locations to which nearest
village locations are to be matched. Data frame should contain at least
information on longitude and latitude coordinates}

\item{x1}{A character value specifying the variable name in \code{input}
holding the longitude information of the sampling locations}

\item{y1}{A character value specifying the variable name in \code{input}
holding the latitude information of the village/community locations}

\item{query}{A data frame of village/community locations with at least
information on longitude and latitude coordinates from which to query for
nearest point}

\item{x2}{A character value specifying the variable name in \code{query}
holding the longitude information of the village/community locations}

\item{y2}{A character value specifying the variable name in \code{query}
holding the latitude information of the village/community locations}

\item{n}{Number of nearest village/community locations to select. Default
is 1}

\item{duplicate}{Logical. If TRUE, keep duplicate samples. If FALSE, remove
duplicate samples.}
}
\value{
A data frame of selected nearest sampling village/community locations
}
\description{
Function to select nearest community to a given sampling location
}
\examples{
# Use get_nearest_point with test sampling points in Sennar
sennar <- subset(sudan01, STATE == "Sennar")
samp.points <- spsample(sennar, type = "hexagonal", n = 20)
get_nearest_point(input = samp.points@coords, x1 = "x", y1 = "y",
                  query = sennar_villages, x2 = "x", y2 = "y",
                  n = 3)

}
\author{
Farah Mohamad Ibrahim <abdu.ff@gmail.com>
}
